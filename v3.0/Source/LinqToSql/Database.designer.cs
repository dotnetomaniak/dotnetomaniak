#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kigg.LinqToSql.Repository
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="pawlos_dotnetomaniak")]
	public partial class Database : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCategory(Kigg.LinqToSql.DomainObjects.Category instance);
    partial void UpdateCategory(Kigg.LinqToSql.DomainObjects.Category instance);
    partial void DeleteCategory(Kigg.LinqToSql.DomainObjects.Category instance);
    partial void InsertUserTag(Kigg.LinqToSql.DomainObjects.UserTag instance);
    partial void UpdateUserTag(Kigg.LinqToSql.DomainObjects.UserTag instance);
    partial void DeleteUserTag(Kigg.LinqToSql.DomainObjects.UserTag instance);
    partial void InsertCommentSubscribtion(Kigg.LinqToSql.DomainObjects.CommentSubscribtion instance);
    partial void UpdateCommentSubscribtion(Kigg.LinqToSql.DomainObjects.CommentSubscribtion instance);
    partial void DeleteCommentSubscribtion(Kigg.LinqToSql.DomainObjects.CommentSubscribtion instance);
    partial void InsertKnownSource(Kigg.LinqToSql.DomainObjects.KnownSource instance);
    partial void UpdateKnownSource(Kigg.LinqToSql.DomainObjects.KnownSource instance);
    partial void DeleteKnownSource(Kigg.LinqToSql.DomainObjects.KnownSource instance);
    partial void InsertStory(Kigg.LinqToSql.DomainObjects.Story instance);
    partial void UpdateStory(Kigg.LinqToSql.DomainObjects.Story instance);
    partial void DeleteStory(Kigg.LinqToSql.DomainObjects.Story instance);
    partial void InsertStoryComment(Kigg.LinqToSql.DomainObjects.StoryComment instance);
    partial void UpdateStoryComment(Kigg.LinqToSql.DomainObjects.StoryComment instance);
    partial void DeleteStoryComment(Kigg.LinqToSql.DomainObjects.StoryComment instance);
    partial void InsertStoryMarkAsSpam(Kigg.LinqToSql.DomainObjects.StoryMarkAsSpam instance);
    partial void UpdateStoryMarkAsSpam(Kigg.LinqToSql.DomainObjects.StoryMarkAsSpam instance);
    partial void DeleteStoryMarkAsSpam(Kigg.LinqToSql.DomainObjects.StoryMarkAsSpam instance);
    partial void InsertStoryTag(Kigg.LinqToSql.DomainObjects.StoryTag instance);
    partial void UpdateStoryTag(Kigg.LinqToSql.DomainObjects.StoryTag instance);
    partial void DeleteStoryTag(Kigg.LinqToSql.DomainObjects.StoryTag instance);
    partial void InsertStoryView(Kigg.LinqToSql.DomainObjects.StoryView instance);
    partial void UpdateStoryView(Kigg.LinqToSql.DomainObjects.StoryView instance);
    partial void DeleteStoryView(Kigg.LinqToSql.DomainObjects.StoryView instance);
    partial void InsertStoryVote(Kigg.LinqToSql.DomainObjects.StoryVote instance);
    partial void UpdateStoryVote(Kigg.LinqToSql.DomainObjects.StoryVote instance);
    partial void DeleteStoryVote(Kigg.LinqToSql.DomainObjects.StoryVote instance);
    partial void InsertTag(Kigg.LinqToSql.DomainObjects.Tag instance);
    partial void UpdateTag(Kigg.LinqToSql.DomainObjects.Tag instance);
    partial void DeleteTag(Kigg.LinqToSql.DomainObjects.Tag instance);
    partial void InsertUser(Kigg.LinqToSql.DomainObjects.User instance);
    partial void UpdateUser(Kigg.LinqToSql.DomainObjects.User instance);
    partial void DeleteUser(Kigg.LinqToSql.DomainObjects.User instance);
    partial void InsertUserScore(Kigg.LinqToSql.DomainObjects.UserScore instance);
    partial void UpdateUserScore(Kigg.LinqToSql.DomainObjects.UserScore instance);
    partial void DeleteUserScore(Kigg.LinqToSql.DomainObjects.UserScore instance);
    partial void InsertUserAchievement(Kigg.LinqToSql.DomainObjects.UserAchievement instance);
    partial void UpdateUserAchievement(Kigg.LinqToSql.DomainObjects.UserAchievement instance);
    partial void DeleteUserAchievement(Kigg.LinqToSql.DomainObjects.UserAchievement instance);
    partial void InsertAchievement(Kigg.LinqToSql.DomainObjects.Achievement instance);
    partial void UpdateAchievement(Kigg.LinqToSql.DomainObjects.Achievement instance);
    partial void DeleteAchievement(Kigg.LinqToSql.DomainObjects.Achievement instance);
    partial void InsertRecommendation(Kigg.LinqToSql.DomainObjects.Recommendation instance);
    partial void UpdateRecommendation(Kigg.LinqToSql.DomainObjects.Recommendation instance);
    partial void DeleteRecommendation(Kigg.LinqToSql.DomainObjects.Recommendation instance);
    partial void InsertCommingEvent(Kigg.LinqToSql.DomainObjects.CommingEvent instance);
    partial void UpdateCommingEvent(Kigg.LinqToSql.DomainObjects.CommingEvent instance);
    partial void DeleteCommingEvent(Kigg.LinqToSql.DomainObjects.CommingEvent instance);
    #endregion
		
		public Database() : 
				base(global::Kigg.Infrastructure.LinqToSql.Properties.Settings.Default.pawlos_dotnetomaniakConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Database(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Database(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Database(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Database(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.Category> Categories
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.Category>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.UserTag> UserTags
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.UserTag>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.CommentSubscribtion> CommentSubscribtions
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.CommentSubscribtion>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.KnownSource> KnownSources
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.KnownSource>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.Story> Stories
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.Story>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.StoryComment> StoryComments
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.StoryComment>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.StoryMarkAsSpam> StoryMarkAsSpams
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.StoryMarkAsSpam>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.StoryTag> StoryTags
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.StoryTag>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.StoryView> StoryViews
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.StoryView>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.StoryVote> StoryVotes
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.StoryVote>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.Tag> Tags
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.Tag>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.User> Users
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.User>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.UserScore> UserScores
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.UserScore>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.UserAchievement> UserAchievements
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.UserAchievement>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.Achievement> Achievements
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.Achievement>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.Recommendation> Recommendations
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.Recommendation>();
			}
		}
		
		public System.Data.Linq.Table<Kigg.LinqToSql.DomainObjects.CommingEvent> CommingEvents
		{
			get
			{
				return this.GetTable<Kigg.LinqToSql.DomainObjects.CommingEvent>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CommentSearch", IsComposable=true)]
		public IQueryable<Kigg.LinqToSql.DomainObjects.CommentSearchResult> CommentSearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(4000)")] string query)
		{
			return this.CreateMethodCallQuery<Kigg.LinqToSql.DomainObjects.CommentSearchResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), query);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.StorySearch", IsComposable=true)]
		public IQueryable<Kigg.LinqToSql.DomainObjects.StorySearchResult> StorySearch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(4000)")] string query)
		{
			return this.CreateMethodCallQuery<Kigg.LinqToSql.DomainObjects.StorySearchResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), query);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="[_10kPoints]", IsComposable=false)]
		public int _10kPoints()
		{
            return ((int)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "[GoodStory]", IsComposable = false)]
        public int GoodStory()
        {
            return ((int)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "[GreatStory]", IsComposable = false)]
        public int GreatStory()
        {
            return ((int)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "[PopularStory]", IsComposable = false)]
        public int PopularStory()
        {
            return ((int)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
        }
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="EarlyBird", IsComposable=false)]
		public int EarlyBird()
		{
            return ((int)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "Commenter", IsComposable = false)]
        public int Commeter()
        {
            return ((int)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "StoryAdder", IsComposable = false)]
		public int StoryAdder()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((int)(result.ReturnValue));
		}
		
        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "[_1kPoints]", IsComposable = false)]
		public int _1kPoints()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "NightOwl", IsComposable = false)]
        public int NightOwl()
        {
            return ((int)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "UpVoter", IsComposable = false)]
        public int UpVoter()
		{
            return ((int)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "MultiAdder", IsComposable = false)]
        public int MultiAdder()
        {
            return ((int)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "Globetrotter", IsComposable = false)]
        public int Globetrotter()
        {
            return ((int)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
        }

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "Dotnetomaniak", IsComposable = false)]
        public int Dotnetomaniak()
        {
            return ((int)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
        }
        
        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "Facebook", IsComposable = false)]
        public int Facebook()
        {
            return ((int)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
	}
}
namespace Kigg.LinqToSql.DomainObjects
{
	using System.Runtime.Serialization;
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _UniqueName;
		
		private string _Name;
		
		private System.DateTime _CreatedAt;
		
		private string _Description;
		
		private bool _IsActive;
		
		private EntitySet<Story> _Stories;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUniqueNameChanging(string value);
    partial void OnUniqueNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Category()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueName", DbType="NVarChar(64) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UniqueName
		{
			get
			{
				return this._UniqueName;
			}
			set
			{
				if ((this._UniqueName != value))
				{
					this.OnUniqueNameChanging(value);
					this.SendPropertyChanging();
					this._UniqueName = value;
					this.SendPropertyChanged("UniqueName");
					this.OnUniqueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Story", Storage="_Stories", ThisKey="Id", OtherKey="CategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<Story> Stories
		{
			get
			{
				if ((this.serializing 
							&& (this._Stories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Stories;
			}
			set
			{
				this._Stories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stories(Story entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Stories(Story entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void Initialize()
		{
			this._Stories = new EntitySet<Story>(new Action<Story>(this.attach_Stories), new Action<Story>(this.detach_Stories));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTag")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _TagId;
		
		private EntityRef<Tag> _Tag;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnTagIdChanging(System.Guid value);
    partial void OnTagIdChanged();
    #endregion
		
		public UserTag()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIdChanging(value);
					this.SendPropertyChanging();
					this._TagId = value;
					this.SendPropertyChanged("TagId");
					this.OnTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_UserTag", Storage="_Tag", ThisKey="TagId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.UserTags.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.UserTags.Add(this);
						this._TagId = value.Id;
					}
					else
					{
						this._TagId = default(System.Guid);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserTag", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserTags.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserTags.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Tag = default(EntityRef<Tag>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommentSubscribtion")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommentSubscribtion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _StoryId;
		
		private System.Guid _UserId;
		
		private EntityRef<Story> _Story;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoryIdChanging(System.Guid value);
    partial void OnStoryIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    #endregion
		
		public CommentSubscribtion()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid StoryId
		{
			get
			{
				return this._StoryId;
			}
			set
			{
				if ((this._StoryId != value))
				{
					if (this._Story.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoryIdChanging(value);
					this.SendPropertyChanging();
					this._StoryId = value;
					this.SendPropertyChanged("StoryId");
					this.OnStoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_CommentSubscribtion", Storage="_Story", ThisKey="StoryId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Story Story
		{
			get
			{
				return this._Story.Entity;
			}
			set
			{
				Story previousValue = this._Story.Entity;
				if (((previousValue != value) 
							|| (this._Story.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Story.Entity = null;
						previousValue.CommentSubscribtions.Remove(this);
					}
					this._Story.Entity = value;
					if ((value != null))
					{
						value.CommentSubscribtions.Add(this);
						this._StoryId = value.Id;
					}
					else
					{
						this._StoryId = default(System.Guid);
					}
					this.SendPropertyChanged("Story");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommentSubscribtion", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CommentSubscribtions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CommentSubscribtions.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Story = default(EntityRef<Story>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KnownSource")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class KnownSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Url;
		
		private global::Kigg.DomainObjects.KnownSourceGrade _Grade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnGradeChanging(global::Kigg.DomainObjects.KnownSourceGrade value);
    partial void OnGradeChanged();
    #endregion
		
		public KnownSource()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(450) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="Int NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public global::Kigg.DomainObjects.KnownSourceGrade Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Story")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Story : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _UniqueName;
		
		private string _Title;
		
		private System.Data.Linq.Link<string> _HtmlDescription;
		
		private string _TextDescription;
		
		private string _Url;
		
		private string _UrlHash;
		
		private System.Guid _CategoryId;
		
		private System.Guid _UserId;
		
		private string _IPAddress;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _LastActivityAt;
		
		private System.Nullable<System.DateTime> _ApprovedAt;
		
		private System.Nullable<System.DateTime> _PublishedAt;
		
		private System.Nullable<int> _Rank;
		
		private System.Nullable<System.DateTime> _LastProcessedAt;
		
		private EntitySet<CommentSubscribtion> _CommentSubscribtions;
		
		private EntitySet<StoryComment> _StoryComments;
		
		private EntitySet<StoryMarkAsSpam> _StoryMarkAsSpams;
		
		private EntitySet<StoryTag> _StoryTags;
		
		private EntitySet<StoryView> _StoryViews;
		
		private EntitySet<StoryVote> _StoryVotes;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<User> _User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUniqueNameChanging(string value);
    partial void OnUniqueNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnHtmlDescriptionChanging(string value);
    partial void OnHtmlDescriptionChanged();
    partial void OnTextDescriptionChanging(string value);
    partial void OnTextDescriptionChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnUrlHashChanging(string value);
    partial void OnUrlHashChanged();
    partial void OnCategoryIdChanging(System.Guid value);
    partial void OnCategoryIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnLastActivityAtChanging(System.DateTime value);
    partial void OnLastActivityAtChanged();
    partial void OnApprovedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedAtChanged();
    partial void OnPublishedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishedAtChanged();
    partial void OnRankChanging(System.Nullable<int> value);
    partial void OnRankChanged();
    partial void OnLastProcessedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnLastProcessedAtChanged();
    #endregion
		
		public Story()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueName", DbType="NVarChar(256) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UniqueName
		{
			get
			{
				return this._UniqueName;
			}
			set
			{
				if ((this._UniqueName != value))
				{
					this.OnUniqueNameChanging(value);
					this.SendPropertyChanging();
					this._UniqueName = value;
					this.SendPropertyChanged("UniqueName");
					this.OnUniqueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(256) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string HtmlDescription
		{
			get
			{
				return this._HtmlDescription.Value;
			}
			set
			{
				if ((this._HtmlDescription.Value != value))
				{
					this.OnHtmlDescriptionChanging(value);
					this.SendPropertyChanging();
					this._HtmlDescription.Value = value;
					this.SendPropertyChanged("HtmlDescription");
					this.OnHtmlDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string TextDescription
		{
			get
			{
				return this._TextDescription;
			}
			set
			{
				if ((this._TextDescription != value))
				{
					this.OnTextDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TextDescription = value;
					this.SendPropertyChanged("TextDescription");
					this.OnTextDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(2048) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlHash", DbType="NChar(24) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string UrlHash
		{
			get
			{
				return this._UrlHash;
			}
			set
			{
				if ((this._UrlHash != value))
				{
					this.OnUrlHashChanging(value);
					this.SendPropertyChanging();
					this._UrlHash = value;
					this.SendPropertyChanged("UrlHash");
					this.OnUrlHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.Guid CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityAt", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.DateTime LastActivityAt
		{
			get
			{
				return this._LastActivityAt;
			}
			set
			{
				if ((this._LastActivityAt != value))
				{
					this.OnLastActivityAtChanging(value);
					this.SendPropertyChanging();
					this._LastActivityAt = value;
					this.SendPropertyChanged("LastActivityAt");
					this.OnLastActivityAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedAt", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Nullable<System.DateTime> ApprovedAt
		{
			get
			{
				return this._ApprovedAt;
			}
			set
			{
				if ((this._ApprovedAt != value))
				{
					this.OnApprovedAtChanging(value);
					this.SendPropertyChanging();
					this._ApprovedAt = value;
					this.SendPropertyChanged("ApprovedAt");
					this.OnApprovedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedAt", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public System.Nullable<System.DateTime> PublishedAt
		{
			get
			{
				return this._PublishedAt;
			}
			set
			{
				if ((this._PublishedAt != value))
				{
					this.OnPublishedAtChanging(value);
					this.SendPropertyChanging();
					this._PublishedAt = value;
					this.SendPropertyChanged("PublishedAt");
					this.OnPublishedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Nullable<int> Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastProcessedAt", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public System.Nullable<System.DateTime> LastProcessedAt
		{
			get
			{
				return this._LastProcessedAt;
			}
			set
			{
				if ((this._LastProcessedAt != value))
				{
					this.OnLastProcessedAtChanging(value);
					this.SendPropertyChanging();
					this._LastProcessedAt = value;
					this.SendPropertyChanged("LastProcessedAt");
					this.OnLastProcessedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_CommentSubscribtion", Storage="_CommentSubscribtions", ThisKey="Id", OtherKey="StoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<CommentSubscribtion> CommentSubscribtions
		{
			get
			{
				if ((this.serializing 
							&& (this._CommentSubscribtions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommentSubscribtions;
			}
			set
			{
				this._CommentSubscribtions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_StoryComment", Storage="_StoryComments", ThisKey="Id", OtherKey="StoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<StoryComment> StoryComments
		{
			get
			{
				if ((this.serializing 
							&& (this._StoryComments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StoryComments;
			}
			set
			{
				this._StoryComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_StoryMarkAsSpam", Storage="_StoryMarkAsSpams", ThisKey="Id", OtherKey="StoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<StoryMarkAsSpam> StoryMarkAsSpams
		{
			get
			{
				if ((this.serializing 
							&& (this._StoryMarkAsSpams.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StoryMarkAsSpams;
			}
			set
			{
				this._StoryMarkAsSpams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_StoryTag", Storage="_StoryTags", ThisKey="Id", OtherKey="StoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<StoryTag> StoryTags
		{
			get
			{
				if ((this.serializing 
							&& (this._StoryTags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StoryTags;
			}
			set
			{
				this._StoryTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_StoryView", Storage="_StoryViews", ThisKey="Id", OtherKey="StoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21, EmitDefaultValue=false)]
		public EntitySet<StoryView> StoryViews
		{
			get
			{
				if ((this.serializing 
							&& (this._StoryViews.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StoryViews;
			}
			set
			{
				this._StoryViews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_StoryVote", Storage="_StoryVotes", ThisKey="Id", OtherKey="StoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<StoryVote> StoryVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._StoryVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StoryVotes;
			}
			set
			{
				this._StoryVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Story", Storage="_Category", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Stories.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Stories.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(System.Guid);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Story", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Stories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Stories.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommentSubscribtions(CommentSubscribtion entity)
		{
			this.SendPropertyChanging();
			entity.Story = this;
		}
		
		private void detach_CommentSubscribtions(CommentSubscribtion entity)
		{
			this.SendPropertyChanging();
			entity.Story = null;
		}
		
		private void attach_StoryComments(StoryComment entity)
		{
			this.SendPropertyChanging();
			entity.Story = this;
		}
		
		private void detach_StoryComments(StoryComment entity)
		{
			this.SendPropertyChanging();
			entity.Story = null;
		}
		
		private void attach_StoryMarkAsSpams(StoryMarkAsSpam entity)
		{
			this.SendPropertyChanging();
			entity.Story = this;
		}
		
		private void detach_StoryMarkAsSpams(StoryMarkAsSpam entity)
		{
			this.SendPropertyChanging();
			entity.Story = null;
		}
		
		private void attach_StoryTags(StoryTag entity)
		{
			this.SendPropertyChanging();
			entity.Story = this;
		}
		
		private void detach_StoryTags(StoryTag entity)
		{
			this.SendPropertyChanging();
			entity.Story = null;
		}
		
		private void attach_StoryViews(StoryView entity)
		{
			this.SendPropertyChanging();
			entity.Story = this;
		}
		
		private void detach_StoryViews(StoryView entity)
		{
			this.SendPropertyChanging();
			entity.Story = null;
		}
		
		private void attach_StoryVotes(StoryVote entity)
		{
			this.SendPropertyChanging();
			entity.Story = this;
		}
		
		private void detach_StoryVotes(StoryVote entity)
		{
			this.SendPropertyChanging();
			entity.Story = null;
		}
		
		private void Initialize()
		{
			this._CommentSubscribtions = new EntitySet<CommentSubscribtion>(new Action<CommentSubscribtion>(this.attach_CommentSubscribtions), new Action<CommentSubscribtion>(this.detach_CommentSubscribtions));
			this._StoryComments = new EntitySet<StoryComment>(new Action<StoryComment>(this.attach_StoryComments), new Action<StoryComment>(this.detach_StoryComments));
			this._StoryMarkAsSpams = new EntitySet<StoryMarkAsSpam>(new Action<StoryMarkAsSpam>(this.attach_StoryMarkAsSpams), new Action<StoryMarkAsSpam>(this.detach_StoryMarkAsSpams));
			this._StoryTags = new EntitySet<StoryTag>(new Action<StoryTag>(this.attach_StoryTags), new Action<StoryTag>(this.detach_StoryTags));
			this._StoryViews = new EntitySet<StoryView>(new Action<StoryView>(this.attach_StoryViews), new Action<StoryView>(this.detach_StoryViews));
			this._StoryVotes = new EntitySet<StoryVote>(new Action<StoryVote>(this.attach_StoryVotes), new Action<StoryVote>(this.detach_StoryVotes));
			this._Category = default(EntityRef<Category>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoryComment")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StoryComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _HtmlBody;
		
		private System.Data.Linq.Link<string> _TextBody;
		
		private System.DateTime _CreatedAt;
		
		private System.Guid _StoryId;
		
		private System.Guid _UserId;
		
		private string _IPAddress;
		
		private bool _IsOffended;
		
		private EntityRef<Story> _Story;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnHtmlBodyChanging(string value);
    partial void OnHtmlBodyChanged();
    partial void OnTextBodyChanging(string value);
    partial void OnTextBodyChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnStoryIdChanging(System.Guid value);
    partial void OnStoryIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnIsOffendedChanging(bool value);
    partial void OnIsOffendedChanged();
    #endregion
		
		public StoryComment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HtmlBody", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string HtmlBody
		{
			get
			{
				return this._HtmlBody;
			}
			set
			{
				if ((this._HtmlBody != value))
				{
					this.OnHtmlBodyChanging(value);
					this.SendPropertyChanging();
					this._HtmlBody = value;
					this.SendPropertyChanged("HtmlBody");
					this.OnHtmlBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextBody", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string TextBody
		{
			get
			{
				return this._TextBody.Value;
			}
			set
			{
				if ((this._TextBody.Value != value))
				{
					this.OnTextBodyChanging(value);
					this.SendPropertyChanging();
					this._TextBody.Value = value;
					this.SendPropertyChanged("TextBody");
					this.OnTextBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoryId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Guid StoryId
		{
			get
			{
				return this._StoryId;
			}
			set
			{
				if ((this._StoryId != value))
				{
					if (this._Story.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoryIdChanging(value);
					this.SendPropertyChanging();
					this._StoryId = value;
					this.SendPropertyChanged("StoryId");
					this.OnStoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOffended", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public bool IsOffended
		{
			get
			{
				return this._IsOffended;
			}
			set
			{
				if ((this._IsOffended != value))
				{
					this.OnIsOffendedChanging(value);
					this.SendPropertyChanging();
					this._IsOffended = value;
					this.SendPropertyChanged("IsOffended");
					this.OnIsOffendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_StoryComment", Storage="_Story", ThisKey="StoryId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Story Story
		{
			get
			{
				return this._Story.Entity;
			}
			set
			{
				Story previousValue = this._Story.Entity;
				if (((previousValue != value) 
							|| (this._Story.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Story.Entity = null;
						previousValue.StoryComments.Remove(this);
					}
					this._Story.Entity = value;
					if ((value != null))
					{
						value.StoryComments.Add(this);
						this._StoryId = value.Id;
					}
					else
					{
						this._StoryId = default(System.Guid);
					}
					this.SendPropertyChanged("Story");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StoryComment", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StoryComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StoryComments.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Story = default(EntityRef<Story>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoryMarkAsSpam")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StoryMarkAsSpam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _StoryId;
		
		private System.Guid _UserId;
		
		private string _IPAddress;
		
		private System.DateTime _Timestamp;
		
		private EntityRef<Story> _Story;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoryIdChanging(System.Guid value);
    partial void OnStoryIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public StoryMarkAsSpam()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid StoryId
		{
			get
			{
				return this._StoryId;
			}
			set
			{
				if ((this._StoryId != value))
				{
					if (this._Story.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoryIdChanging(value);
					this.SendPropertyChanging();
					this._StoryId = value;
					this.SendPropertyChanged("StoryId");
					this.OnStoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_StoryMarkAsSpam", Storage="_Story", ThisKey="StoryId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Story Story
		{
			get
			{
				return this._Story.Entity;
			}
			set
			{
				Story previousValue = this._Story.Entity;
				if (((previousValue != value) 
							|| (this._Story.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Story.Entity = null;
						previousValue.StoryMarkAsSpams.Remove(this);
					}
					this._Story.Entity = value;
					if ((value != null))
					{
						value.StoryMarkAsSpams.Add(this);
						this._StoryId = value.Id;
					}
					else
					{
						this._StoryId = default(System.Guid);
					}
					this.SendPropertyChanged("Story");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StoryMarkAsSpam", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StoryMarkAsSpams.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StoryMarkAsSpams.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Story = default(EntityRef<Story>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoryTag")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StoryTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _StoryId;
		
		private System.Guid _TagId;
		
		private EntityRef<Story> _Story;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoryIdChanging(System.Guid value);
    partial void OnStoryIdChanged();
    partial void OnTagIdChanging(System.Guid value);
    partial void OnTagIdChanged();
    #endregion
		
		public StoryTag()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid StoryId
		{
			get
			{
				return this._StoryId;
			}
			set
			{
				if ((this._StoryId != value))
				{
					if (this._Story.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoryIdChanging(value);
					this.SendPropertyChanging();
					this._StoryId = value;
					this.SendPropertyChanged("StoryId");
					this.OnStoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid TagId
		{
			get
			{
				return this._TagId;
			}
			set
			{
				if ((this._TagId != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIdChanging(value);
					this.SendPropertyChanging();
					this._TagId = value;
					this.SendPropertyChanged("TagId");
					this.OnTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_StoryTag", Storage="_Story", ThisKey="StoryId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Story Story
		{
			get
			{
				return this._Story.Entity;
			}
			set
			{
				Story previousValue = this._Story.Entity;
				if (((previousValue != value) 
							|| (this._Story.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Story.Entity = null;
						previousValue.StoryTags.Remove(this);
					}
					this._Story.Entity = value;
					if ((value != null))
					{
						value.StoryTags.Add(this);
						this._StoryId = value.Id;
					}
					else
					{
						this._StoryId = default(System.Guid);
					}
					this.SendPropertyChanged("Story");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_StoryTag", Storage="_Tag", ThisKey="TagId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.StoryTags.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.StoryTags.Add(this);
						this._TagId = value.Id;
					}
					else
					{
						this._TagId = default(System.Guid);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Story = default(EntityRef<Story>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoryView")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StoryView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Guid _StoryId;
		
		private System.DateTime _Timestamp;
		
		private string _IPAddress;
		
		private EntityRef<Story> _Story;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnStoryIdChanging(System.Guid value);
    partial void OnStoryIdChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public StoryView()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoryId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid StoryId
		{
			get
			{
				return this._StoryId;
			}
			set
			{
				if ((this._StoryId != value))
				{
					if (this._Story.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoryIdChanging(value);
					this.SendPropertyChanging();
					this._StoryId = value;
					this.SendPropertyChanged("StoryId");
					this.OnStoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_StoryView", Storage="_Story", ThisKey="StoryId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Story Story
		{
			get
			{
				return this._Story.Entity;
			}
			set
			{
				Story previousValue = this._Story.Entity;
				if (((previousValue != value) 
							|| (this._Story.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Story.Entity = null;
						previousValue.StoryViews.Remove(this);
					}
					this._Story.Entity = value;
					if ((value != null))
					{
						value.StoryViews.Add(this);
						this._StoryId = value.Id;
					}
					else
					{
						this._StoryId = default(System.Guid);
					}
					this.SendPropertyChanged("Story");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Story = default(EntityRef<Story>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoryVote")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StoryVote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _StoryId;
		
		private System.Guid _UserId;
		
		private string _IPAddress;
		
		private System.DateTime _Timestamp;
		
		private EntityRef<Story> _Story;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoryIdChanging(System.Guid value);
    partial void OnStoryIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public StoryVote()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid StoryId
		{
			get
			{
				return this._StoryId;
			}
			set
			{
				if ((this._StoryId != value))
				{
					if (this._Story.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoryIdChanging(value);
					this.SendPropertyChanging();
					this._StoryId = value;
					this.SendPropertyChanged("StoryId");
					this.OnStoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(15) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Story_StoryVote", Storage="_Story", ThisKey="StoryId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public Story Story
		{
			get
			{
				return this._Story.Entity;
			}
			set
			{
				Story previousValue = this._Story.Entity;
				if (((previousValue != value) 
							|| (this._Story.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Story.Entity = null;
						previousValue.StoryVotes.Remove(this);
					}
					this._Story.Entity = value;
					if ((value != null))
					{
						value.StoryVotes.Add(this);
						this._StoryId = value.Id;
					}
					else
					{
						this._StoryId = default(System.Guid);
					}
					this.SendPropertyChanged("Story");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StoryVote", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.StoryVotes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.StoryVotes.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Story = default(EntityRef<Story>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tag")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _UniqueName;
		
		private string _Name;
		
		private System.DateTime _CreatedAt;
		
		private EntitySet<UserTag> _UserTags;
		
		private EntitySet<StoryTag> _StoryTags;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUniqueNameChanging(string value);
    partial void OnUniqueNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    #endregion
		
		public Tag()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueName", DbType="NVarChar(64) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UniqueName
		{
			get
			{
				return this._UniqueName;
			}
			set
			{
				if ((this._UniqueName != value))
				{
					this.OnUniqueNameChanging(value);
					this.SendPropertyChanging();
					this._UniqueName = value;
					this.SendPropertyChanged("UniqueName");
					this.OnUniqueNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_UserTag", Storage="_UserTags", ThisKey="Id", OtherKey="TagId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<UserTag> UserTags
		{
			get
			{
				if ((this.serializing 
							&& (this._UserTags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserTags;
			}
			set
			{
				this._UserTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_StoryTag", Storage="_StoryTags", ThisKey="Id", OtherKey="TagId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<StoryTag> StoryTags
		{
			get
			{
				if ((this.serializing 
							&& (this._StoryTags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StoryTags;
			}
			set
			{
				this._StoryTags.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserTags(UserTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_UserTags(UserTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
		
		private void attach_StoryTags(StoryTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_StoryTags(StoryTag entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
		
		private void Initialize()
		{
			this._UserTags = new EntitySet<UserTag>(new Action<UserTag>(this.attach_UserTags), new Action<UserTag>(this.detach_UserTags));
			this._StoryTags = new EntitySet<StoryTag>(new Action<StoryTag>(this.attach_StoryTags), new Action<StoryTag>(this.detach_StoryTags));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Email;
		
		private bool _IsActive;
		
		private bool _IsLockedOut;
		
		private global::Kigg.DomainObjects.Roles _Role;
		
		private System.DateTime _LastActivityAt;
		
		private System.DateTime _CreatedAt;
		
		private string _FbId;
		
		private EntitySet<UserTag> _UserTags;
		
		private EntitySet<CommentSubscribtion> _CommentSubscribtions;
		
		private EntitySet<Story> _Stories;
		
		private EntitySet<StoryComment> _StoryComments;
		
		private EntitySet<StoryMarkAsSpam> _StoryMarkAsSpams;
		
		private EntitySet<StoryVote> _StoryVotes;
		
		private EntitySet<UserScore> _UserScores;
		
		private EntitySet<UserAchievement> _UserAchievements;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnRoleChanging(global::Kigg.DomainObjects.Roles value);
    partial void OnRoleChanged();
    partial void OnLastActivityAtChanging(System.DateTime value);
    partial void OnLastActivityAtChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnFbIdChanging(string value);
    partial void OnFbIdChanged();
    #endregion
		
		public User()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(64)", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public global::Kigg.DomainObjects.Roles Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityAt", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime LastActivityAt
		{
			get
			{
				return this._LastActivityAt;
			}
			set
			{
				if ((this._LastActivityAt != value))
				{
					this.OnLastActivityAtChanging(value);
					this.SendPropertyChanging();
					this._LastActivityAt = value;
					this.SendPropertyChanged("LastActivityAt");
					this.OnLastActivityAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FbId", DbType="NVarChar(256)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string FbId
		{
			get
			{
				return this._FbId;
			}
			set
			{
				if ((this._FbId != value))
				{
					this.OnFbIdChanging(value);
					this.SendPropertyChanging();
					this._FbId = value;
					this.SendPropertyChanged("FbId");
					this.OnFbIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserTag", Storage="_UserTags", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<UserTag> UserTags
		{
			get
			{
				if ((this.serializing 
							&& (this._UserTags.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserTags;
			}
			set
			{
				this._UserTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CommentSubscribtion", Storage="_CommentSubscribtions", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<CommentSubscribtion> CommentSubscribtions
		{
			get
			{
				if ((this.serializing 
							&& (this._CommentSubscribtions.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._CommentSubscribtions;
			}
			set
			{
				this._CommentSubscribtions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Story", Storage="_Stories", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<Story> Stories
		{
			get
			{
				if ((this.serializing 
							&& (this._Stories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Stories;
			}
			set
			{
				this._Stories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StoryComment", Storage="_StoryComments", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<StoryComment> StoryComments
		{
			get
			{
				if ((this.serializing 
							&& (this._StoryComments.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StoryComments;
			}
			set
			{
				this._StoryComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StoryMarkAsSpam", Storage="_StoryMarkAsSpams", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<StoryMarkAsSpam> StoryMarkAsSpams
		{
			get
			{
				if ((this.serializing 
							&& (this._StoryMarkAsSpams.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StoryMarkAsSpams;
			}
			set
			{
				this._StoryMarkAsSpams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_StoryVote", Storage="_StoryVotes", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<StoryVote> StoryVotes
		{
			get
			{
				if ((this.serializing 
							&& (this._StoryVotes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._StoryVotes;
			}
			set
			{
				this._StoryVotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserScore", Storage="_UserScores", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<UserScore> UserScores
		{
			get
			{
				if ((this.serializing 
							&& (this._UserScores.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserScores;
			}
			set
			{
				this._UserScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserAchievement", Storage="_UserAchievements", ThisKey="Id", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<UserAchievement> UserAchievements
		{
			get
			{
				if ((this.serializing 
							&& (this._UserAchievements.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserAchievements;
			}
			set
			{
				this._UserAchievements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserTags(UserTag entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserTags(UserTag entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CommentSubscribtions(CommentSubscribtion entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CommentSubscribtions(CommentSubscribtion entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Stories(Story entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Stories(Story entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StoryComments(StoryComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StoryComments(StoryComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StoryMarkAsSpams(StoryMarkAsSpam entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StoryMarkAsSpams(StoryMarkAsSpam entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_StoryVotes(StoryVote entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_StoryVotes(StoryVote entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserScores(UserScore entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserScores(UserScore entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserAchievements(UserAchievement entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserAchievements(UserAchievement entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void Initialize()
		{
			this._UserTags = new EntitySet<UserTag>(new Action<UserTag>(this.attach_UserTags), new Action<UserTag>(this.detach_UserTags));
			this._CommentSubscribtions = new EntitySet<CommentSubscribtion>(new Action<CommentSubscribtion>(this.attach_CommentSubscribtions), new Action<CommentSubscribtion>(this.detach_CommentSubscribtions));
			this._Stories = new EntitySet<Story>(new Action<Story>(this.attach_Stories), new Action<Story>(this.detach_Stories));
			this._StoryComments = new EntitySet<StoryComment>(new Action<StoryComment>(this.attach_StoryComments), new Action<StoryComment>(this.detach_StoryComments));
			this._StoryMarkAsSpams = new EntitySet<StoryMarkAsSpam>(new Action<StoryMarkAsSpam>(this.attach_StoryMarkAsSpams), new Action<StoryMarkAsSpam>(this.detach_StoryMarkAsSpams));
			this._StoryVotes = new EntitySet<StoryVote>(new Action<StoryVote>(this.attach_StoryVotes), new Action<StoryVote>(this.detach_StoryVotes));
			this._UserScores = new EntitySet<UserScore>(new Action<UserScore>(this.attach_UserScores), new Action<UserScore>(this.detach_UserScores));
			this._UserAchievements = new EntitySet<UserAchievement>(new Action<UserAchievement>(this.attach_UserAchievements), new Action<UserAchievement>(this.detach_UserAchievements));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserScore")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserScore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Guid _UserId;
		
		private System.DateTime _Timestamp;
		
		private global::Kigg.DomainObjects.UserAction _ActionType;
		
		private decimal _Score;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnActionTypeChanging(global::Kigg.DomainObjects.UserAction value);
    partial void OnActionTypeChanged();
    partial void OnScoreChanging(decimal value);
    partial void OnScoreChanged();
    #endregion
		
		public UserScore()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionType", DbType="Int NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public global::Kigg.DomainObjects.UserAction ActionType
		{
			get
			{
				return this._ActionType;
			}
			set
			{
				if ((this._ActionType != value))
				{
					this.OnActionTypeChanging(value);
					this.SendPropertyChanging();
					this._ActionType = value;
					this.SendPropertyChanged("ActionType");
					this.OnActionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Score", DbType="Decimal(5,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal Score
		{
			get
			{
				return this._Score;
			}
			set
			{
				if ((this._Score != value))
				{
					this.OnScoreChanging(value);
					this.SendPropertyChanging();
					this._Score = value;
					this.SendPropertyChanged("Score");
					this.OnScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserScore", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserScores.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserScores.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAchievement")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserAchievement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _DateAchieved;
		
		private System.Guid _AchievementId;
		
		private System.Guid _UserId;
		
		private bool _Displayed;
		
		private EntityRef<Achievement> _Achievement;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDateAchievedChanging(System.DateTime value);
    partial void OnDateAchievedChanged();
    partial void OnAchievementIdChanging(System.Guid value);
    partial void OnAchievementIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnDisplayedChanging(bool value);
    partial void OnDisplayedChanged();
    #endregion
		
		public UserAchievement()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAchieved")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.DateTime DateAchieved
		{
			get
			{
				return this._DateAchieved;
			}
			set
			{
				if ((this._DateAchieved != value))
				{
					this.OnDateAchievedChanging(value);
					this.SendPropertyChanging();
					this._DateAchieved = value;
					this.SendPropertyChanged("DateAchieved");
					this.OnDateAchievedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AchievementId", DbType="uniqueidentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid AchievementId
		{
			get
			{
				return this._AchievementId;
			}
			set
			{
				if ((this._AchievementId != value))
				{
					if (this._Achievement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAchievementIdChanging(value);
					this.SendPropertyChanging();
					this._AchievementId = value;
					this.SendPropertyChanged("AchievementId");
					this.OnAchievementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="uniqueidentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Displayed")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool Displayed
		{
			get
			{
				return this._Displayed;
			}
			set
			{
				if ((this._Displayed != value))
				{
					this.OnDisplayedChanging(value);
					this.SendPropertyChanging();
					this._Displayed = value;
					this.SendPropertyChanged("Displayed");
					this.OnDisplayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Achievement_UserAchievement", Storage="_Achievement", ThisKey="AchievementId", OtherKey="Id", IsForeignKey=true)]
		public Achievement Achievement
		{
			get
			{
				return this._Achievement.Entity;
			}
			set
			{
				Achievement previousValue = this._Achievement.Entity;
				if (((previousValue != value) 
							|| (this._Achievement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Achievement.Entity = null;
						previousValue.UserAchievements.Remove(this);
					}
					this._Achievement.Entity = value;
					if ((value != null))
					{
						value.UserAchievements.Add(this);
						this._AchievementId = value.Id;
					}
					else
					{
						this._AchievementId = default(System.Guid);
					}
					this.SendPropertyChanged("Achievement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserAchievement", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserAchievements.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserAchievements.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Achievement = default(EntityRef<Achievement>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Achievement")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Achievement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private System.Guid _Id;
		
		private string _Description;
		
		private int _Type;
		
		private EntitySet<UserAchievement> _UserAchievements;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    #endregion
		
		public Achievement()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="uniqueidentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="ntext NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Achievement_UserAchievement", Storage="_UserAchievements", ThisKey="Id", OtherKey="AchievementId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<UserAchievement> UserAchievements
		{
			get
			{
				if ((this.serializing 
							&& (this._UserAchievements.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserAchievements;
			}
			set
			{
				this._UserAchievements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserAchievements(UserAchievement entity)
		{
			this.SendPropertyChanging();
			entity.Achievement = this;
		}
		
		private void detach_UserAchievements(UserAchievement entity)
		{
			this.SendPropertyChanging();
			entity.Achievement = null;
		}
		
		private void Initialize()
		{
			this._UserAchievements = new EntitySet<UserAchievement>(new Action<UserAchievement>(this.attach_UserAchievements), new Action<UserAchievement>(this.detach_UserAchievements));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recommendation")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Recommendation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _RecommendationLink;
		
		private string _RecommendationTitle;
		
		private string _ImageLink;
		
		private string _ImageTitle;
		
		private System.DateTime _CreatedAt;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private int _Position;
		
		private string _Email;
		
		private bool _NotificationIsSent;
		
		private bool _IsBanner;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnRecommendationLinkChanging(string value);
    partial void OnRecommendationLinkChanged();
    partial void OnRecommendationTitleChanging(string value);
    partial void OnRecommendationTitleChanged();
    partial void OnImageLinkChanging(string value);
    partial void OnImageLinkChanged();
    partial void OnImageTitleChanging(string value);
    partial void OnImageTitleChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNotificationIsSentChanging(bool value);
    partial void OnNotificationIsSentChanged();
    partial void OnIsBannerChanging(bool value);
    partial void OnIsBannerChanged();
    #endregion
		
		public Recommendation()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecommendationLink", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string RecommendationLink
		{
			get
			{
				return this._RecommendationLink;
			}
			set
			{
				if ((this._RecommendationLink != value))
				{
					this.OnRecommendationLinkChanging(value);
					this.SendPropertyChanging();
					this._RecommendationLink = value;
					this.SendPropertyChanged("RecommendationLink");
					this.OnRecommendationLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecommendationTitle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string RecommendationTitle
		{
			get
			{
				return this._RecommendationTitle;
			}
			set
			{
				if ((this._RecommendationTitle != value))
				{
					this.OnRecommendationTitleChanging(value);
					this.SendPropertyChanging();
					this._RecommendationTitle = value;
					this.SendPropertyChanged("RecommendationTitle");
					this.OnRecommendationTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageLink", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ImageLink
		{
			get
			{
				return this._ImageLink;
			}
			set
			{
				if ((this._ImageLink != value))
				{
					this.OnImageLinkChanging(value);
					this.SendPropertyChanging();
					this._ImageLink = value;
					this.SendPropertyChanged("ImageLink");
					this.OnImageLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageTitle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string ImageTitle
		{
			get
			{
				return this._ImageTitle;
			}
			set
			{
				if ((this._ImageTitle != value))
				{
					this.OnImageTitleChanging(value);
					this.SendPropertyChanging();
					this._ImageTitle = value;
					this.SendPropertyChanged("ImageTitle");
					this.OnImageTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Varchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationIsSent", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool NotificationIsSent
		{
			get
			{
				return this._NotificationIsSent;
			}
			set
			{
				if ((this._NotificationIsSent != value))
				{
					this.OnNotificationIsSentChanging(value);
					this.SendPropertyChanging();
					this._NotificationIsSent = value;
					this.SendPropertyChanged("NotificationIsSent");
					this.OnNotificationIsSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBanner", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool IsBanner
		{
			get
			{
				return this._IsBanner;
			}
			set
			{
				if ((this._IsBanner != value))
				{
					this.OnIsBannerChanging(value);
					this.SendPropertyChanging();
					this._IsBanner = value;
					this.SendPropertyChanged("IsBanner");
					this.OnIsBannerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommingEvent")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommingEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _EventLink;
		
		private string _EventName;

		private string _GoogleEventId;
		
		private System.DateTime _EventDate;
		
		private string _EventPlace;
		
		private string _EventLead;
		
		private System.DateTime _CreatedAt;
		
		private string _Email;
		
		private System.Nullable<bool> _IsApproved;

		private System.Nullable<bool> _IsOnline;
		
		private System.Nullable<System.DateTime> _EventEndDate;
		
		private string _EventCity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnEventLinkChanging(string value);
    partial void OnEventLinkChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnEventPlaceChanging(string value);
    partial void OnEventPlaceChanged();
    partial void OnEventLeadChanging(string value);
    partial void OnEventLeadChanged();
    partial void OnCreatedAtChanging(System.DateTime value);
    partial void OnCreatedAtChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnIsOnlineChanging(System.Nullable<bool> value);
    partial void OnIsOnlineChanged();
    partial void OnEventEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEventEndDateChanged();
    partial void OnEventCityChanging(string value);
    partial void OnEventCityChanged();
	partial void OnGoogleEventIdChanging(string value);
    partial void OnGoogleEventIdChanged();
    #endregion
		
		public CommingEvent()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLink", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string EventLink
		{
			get
			{
				return this._EventLink;
			}
			set
			{
				if ((this._EventLink != value))
				{
					this.OnEventLinkChanging(value);
					this.SendPropertyChanging();
					this._EventLink = value;
					this.SendPropertyChanged("EventLink");
					this.OnEventLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventPlace", DbType="VarChar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string EventPlace
		{
			get
			{
				return this._EventPlace;
			}
			set
			{
				if ((this._EventPlace != value))
				{
					this.OnEventPlaceChanging(value);
					this.SendPropertyChanging();
					this._EventPlace = value;
					this.SendPropertyChanged("EventPlace");
					this.OnEventPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLead", DbType="VarChar(500)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string EventLead
		{
			get
			{
				return this._EventLead;
			}
			set
			{
				if ((this._EventLead != value))
				{
					this.OnEventLeadChanging(value);
					this.SendPropertyChanging();
					this._EventLead = value;
					this.SendPropertyChanged("EventLead");
					this.OnEventLeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedAt", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime CreatedAt
		{
			get
			{
				return this._CreatedAt;
			}
			set
			{
				if ((this._CreatedAt != value))
				{
					this.OnCreatedAtChanging(value);
					this.SendPropertyChanging();
					this._CreatedAt = value;
					this.SendPropertyChanged("CreatedAt");
					this.OnCreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Varchar(50)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnline", DbType="bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> IsOnline
		{
			get
			{
				return this._IsOnline;
			}
			set
			{
				if ((this._IsOnline != value))
				{
					this.OnIsOnlineChanging(value);
					this.SendPropertyChanging();
					this._IsOnline = value;
					this.SendPropertyChanged("IsOnline");
					this.OnIsOnlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventEndDate", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Nullable<System.DateTime> EventEndDate
		{
			get
			{
				return this._EventEndDate;
			}
			set
			{
				if ((this._EventEndDate != value))
				{
					this.OnEventEndDateChanging(value);
					this.SendPropertyChanging();
					this._EventEndDate = value;
					this.SendPropertyChanged("EventEndDate");
					this.OnEventEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCity", DbType="VarChar(50) NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string EventCity
		{
			get
			{
				return this._EventCity;
			}
			set
			{
				if ((this._EventCity != value))
				{
					this.OnEventCityChanging(value);
					this.SendPropertyChanging();
					this._EventCity = value;
					this.SendPropertyChanged("EventCity");
					this.OnEventCityChanged();
				}
			}
		}

		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_GoogleEventId", DbType = "VarChar(50) NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order = 13)]
		public string GoogleEventId
		{
			get
			{
				return this._GoogleEventId;
			}
			set
			{
				if ((this._GoogleEventId != value))
				{
					this.OnGoogleEventIdChanging(value);
					this.SendPropertyChanging();
					this._GoogleEventId = value;
					this.SendPropertyChanged("GoogleEventId");
					this.OnGoogleEventIdChanged();
				}
			}
		}

		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CommentSearchResult
	{
		
		private System.Guid _StoryId;
		
		public CommentSearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoryId", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid StoryId
		{
			get
			{
				return this._StoryId;
			}
			set
			{
				if ((this._StoryId != value))
				{
					this._StoryId = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StorySearchResult
	{
		
		private System.Guid _Id;
		
		public StorySearchResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class EarlyBirdResult
	{
		
		private int _Column1;
		
		public EarlyBirdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class StoryAdderResult
	{
		
		private int _Column1;
		
		public StoryAdderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class _1kPointsResult
	{
		
		private int _Column1;
		
		public _1kPointsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
